// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å fs —Å –ø—Ä–æ–º–∏—Å–∞–º–∏
import fs from "node:fs/promises";

async function createAndDeleteFolder() {
    const folderName = './myFolder';
    
    try {
        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ —Å –∏–º–µ–Ω–µ–º myFolder
        console.log('üìÅ –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ myFolder...');
        await fs.mkdir(folderName);
        console.log('‚úÖ –ö–∞—Ç–∞–ª–æ–≥ myFolder —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
        
        // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        console.log('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º...');
        await new Promise(resolve => setTimeout(resolve, 5000));
        
        // –£–¥–∞–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥ myFolder
        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥ myFolder...');
        await fs.rmdir(folderName);
        console.log('‚úÖ –ö–∞—Ç–∞–ª–æ–≥ myFolder —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
        
    } catch (error) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
        if (error.code === 'EEXIST') {
            console.log('‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        } else if (error.code === 'ENOENT') {
            console.log('‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
createAndDeleteFolder();